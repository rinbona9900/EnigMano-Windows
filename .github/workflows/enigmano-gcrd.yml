name: "‚ö° EnigMano GCRD Windows 10"

on:
  workflow_dispatch:
    inputs:
      INSTANCE:
        description: "Instance number"
        required: true
        default: "1"
      SSH_CODE_OR_CMD:
        description: "Paste the entire 'Setup via SSH' command OR just the OAuth code"
        required: true
        default: ""
      GCRD_PIN:
        description: "Optional numeric PIN (‚â•6 digits). Leave blank to omit."
        required: false
        default: ""
      GCRD_REDIRECT_URL:
        description: "Redirect URL (leave default unless Google changes it)"
        required: false
        default: "https://remotedesktop.google.com/_/oauthredirect"

jobs:
  deploy-enigmano:
    name: "üöÄ Deploy EnigMano Instance ${{ github.event.inputs.INSTANCE }}"
    runs-on: windows-latest
    permissions:
      contents: read
      actions: write

    env:
      # Core runtime for your PS1
      INSTANCE_ID: ${{ github.event.inputs.INSTANCE }}
      WORKFLOW_FILE: "enigmano-gcrd.yml"
      REPO: ${{ github.repository }}
      DEPLOYMENT_ID: ${{ github.run_id }}
      SECRET_SHAHZAIB: ${{ secrets.SECRET_SHAHZAIB }}

      # Raw input (either full CMD or just code)
      SSH_CODE_OR_CMD: ${{ github.event.inputs.SSH_CODE_OR_CMD }}
      GCRD_PIN: ${{ github.event.inputs.GCRD_PIN }}
      GCRD_REDIRECT_URL: ${{ github.event.inputs.GCRD_REDIRECT_URL }}

    steps:
      - name: üìå Parameters
        shell: pwsh
        run: |
          Write-Host "==============================================="
          Write-Host "üì¶ Repo               : $env:REPO"
          Write-Host "üÜî Deployment ID      : $env:DEPLOYMENT_ID"
          Write-Host "üñ•Ô∏è  Instance ID        : $env:INSTANCE_ID"
          Write-Host "==============================================="

      - name: üß™ Normalize GCRD Input (accepts full CMD or just code)
        shell: pwsh
        run: |
          $raw = $env:SSH_CODE_OR_CMD.Trim()
          if (-not $raw) {
            Write-Error "‚ùå Missing SSH_CODE_OR_CMD."
            exit 1
          }

          # Defaults
          $redirect = $env:GCRD_REDIRECT_URL
          if (-not $redirect) {
            $redirect = "https://remotedesktop.google.com/_/oauthredirect"
          }

          # If the user pasted the full command, extract --code and optional --redirect-url
          $code = $null
          if ($raw -match '--code="([^"]+)"') {
            $code = $Matches[1]
          } elseif ($raw -match '^\s*"%PROGRAMFILES\(X86\)%\\Google\\Chrome Remote Desktop\\CurrentVersion\\remoting_start_host\.exe"') {
            Write-Error "‚ùå Could not parse --code from the provided command."
            exit 1
          } else {
            # Assume they pasted just the OAuth code
            $code = $raw
          }

          if (-not $code) {
            Write-Error "‚ùå GCRD OAuth code is empty after parsing."
            exit 1
          }

          # (Optional) if command included a different redirect-url, pick it up
          if ($raw -match '--redirect-url="([^"]+)"') {
            $redirect = $Matches[1]
          }

          # Export normalized values to the job environment
          "`nGCRD_CODE=$code"        | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          "`nGCRD_REDIRECT=$redirect" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

          Write-Host "::notice title=GCRD Input Normalized::Code captured. Redirect URL set to: $redirect"

      - name: üß© Install Chrome Remote Desktop Host
        shell: pwsh
        run: |
          $url = "https://dl.google.com/edgedl/chrome-remote-desktop/chromeremotedesktophost.msi"
          $msi = Join-Path $env:TEMP "chromeremotedesktophost.msi"
          Write-Host "üåê Downloading Chrome Remote Desktop Host MSI..."
          Invoke-WebRequest -Uri $url -OutFile $msi -UseBasicParsing
          Write-Host "üõ†Ô∏è  Installing (silent)..."
          $args = "/i `"$msi`" /qn /norestart"
          $p = Start-Process -FilePath "msiexec.exe" -ArgumentList $args -Wait -PassThru
          if ($p.ExitCode -ne 0) {
            Write-Error "‚ùå CRD Host install failed with exit code $($p.ExitCode)"
            exit 1
          }
          Write-Host "‚úÖ Chrome Remote Desktop Host installed."

      - name: üß≠ Resolve CRD executable path
        shell: pwsh
        run: |
          $x86 = Join-Path ${env:ProgramFiles(x86)} "Google\Chrome Remote Desktop\CurrentVersion\remoting_start_host.exe"
          $x64 = Join-Path ${env:ProgramFiles} "Google\Chrome Remote Desktop\CurrentVersion\remoting_start_host.exe"
          $exe = $null
          if (Test-Path $x86) { $exe = $x86 }
          elseif (Test-Path $x64) { $exe = $x64 }
          else { Write-Error "‚ùå remoting_start_host.exe not found after installation."; exit 1 }

          "`nCRD_EXE=$exe" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          Write-Host "::notice title=GCRD Path::Using '$exe'"

      - name: üîó Register Host via Chrome Remote Desktop (headless)
        shell: cmd
        run: |
          IF NOT "%GCRD_PIN%"=="" (
            "%CRD_EXE%" --code="%GCRD_CODE%" --redirect-url="%GCRD_REDIRECT%" --name=%COMPUTERNAME% --pin=%GCRD_PIN%
          ) ELSE (
            "%CRD_EXE%" --code="%GCRD_CODE%" --redirect-url="%GCRD_REDIRECT%" --name=%COMPUTERNAME%
          )

      - name: üì£ GCRD Status
        shell: pwsh
        run: |
          Write-Host "::notice title=GCRD::Host '%env:COMPUTERNAME%' registered. You can now connect via remotedesktop.google.com."

      - name: üì• Fetch EnigMano-Instance.ps1 (GitLab / win10)
        shell: pwsh
        run: |
          $url = "https://gitlab.com/Shahzaib-YT/enigmano-win10-with-sound/-/raw/main/EnigMano-Instance.ps1"
          Write-Host "üåê Downloading EnigMano-Instance.ps1..."
          Invoke-WebRequest -Uri $url -OutFile "EnigMano-Instance.ps1" -UseBasicParsing
          if (!(Test-Path "./EnigMano-Instance.ps1")) {
            Write-Error "‚ùå Failed to download EnigMano-Instance.ps1"
            exit 1
          }
          Write-Host "‚úÖ EnigMano-Instance.ps1 downloaded."

      - name: ‚öîÔ∏è Execute EnigMano-Instance.ps1
        shell: pwsh
        run: |
          Write-Host "üö¶ Initiating EnigMano-Instance.ps1"
          powershell.exe -ExecutionPolicy Bypass -File ".\EnigMano-Instance.ps1"

      - name: üí† Final Status
        if: always()
        shell: pwsh
        run: |
          Write-Host "‚úÖ EnigMano GCRD Instance $env:INSTANCE_ID completed."
          Write-Host "üîã Powered by: SHAHZAIB-YT"
          Write-Host "üèÅ EnigMano deployment executed with tactical precision."
